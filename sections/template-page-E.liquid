<div>
  {% render "header" %}
</div>

<div class="collection-container">
    <h1 id="collection-title"></h1>
    <div class="grid-container">
        <div class="card-container" id="card-container">
            <!-- Products will be rendered here -->
        </div>
    </div>
    <div class="pagination-container">
        <!-- Pagination will go here if necessary -->
    </div>
</div>


<style>
.collection-container {
    padding: 24px 16px;
}

.grid-container {
    display: grid;
    grid-template-columns: 1fr 3fr;
    min-height: 80vh;
}

.sidebar-container {
    padding: 16px;
    background-color: #f0f0f0;
    height: 100vh;
    overflow-y: auto;
}

.card-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 3rem;
    padding: 16px;
    overflow: visible;
    height: auto;
}


/* sidebar */

.accordion {
    margin-bottom: 10px;
}

.accordion-title {
    cursor: pointer;
    background-color: #f0f0f0;
    padding: 10px;
}

.accordion-content {
    display: none;
    padding: 10px;
}

/* Styles for active accordion */
.active .accordion-content {
    display: block;
}


@media (max-width: 700px) {
    .grid-container {
        grid-template-columns: 1fr;
    }

    .sidebar-container {
        height: 400px;
    }

    .card img {
        height: auto;
        object-fit: cover;
    }

    .card-container {
        grid-template-columns: 1fr;
    }
}

</style>


<script>
    window.onload = function() {

        // Get the parameter value
        const parameterValue = getParameterByName('parameter');

        if (parameterValue) {
            fetchCollection(parameterValue);
        }
    };

            // Function to get URL parameters
    function getParameterByName(name) {
            const url = window.location.href;
            name = name.replace(/[\[\]]/g, '\\$&');
            const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');
            const results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, ' '));
        }


        // Function to fetch and display collection
        function fetchCollection(collectionHandle) {
            fetch(`/collections/${collectionHandle}/products.json`)
                .then(response => response.json())
                .then(data => {
                    console.log(`@@@data: ${data}`)
                    const collectionTitle = collectionHandle.replace(/-/g, ' ').toUpperCase();
                    document.getElementById('collection-title').innerText = collectionTitle;
                    
                    const cardContainer = document.getElementById('card-container');
                    cardContainer.innerHTML = '';
                    
                    data.products.forEach(product => {
                        const productCard = document.createElement('div');
                        productCard.className = 'card';
                        productCard.innerHTML = `
                            <img src="${product.images[0] ? product.images[0].src : ''}" alt="${product.title}">
                            <div class="card-text">
                                <span>${product.vendor}</span>
                                <a href="${product.handle}">
                                    <h1>${product.title}</h1>
                                </a>
                                <h2>$${(product.variants[0].price / 100).toFixed(2)}</h2>
                            </div>
                        `;
                        cardContainer.appendChild(productCard);
                    });
                })
                .catch(err => console.error('Error fetching collection:', err));
        }

</script>
